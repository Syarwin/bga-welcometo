/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * welcometo implementation : © Geoffrey VOYER <geoffrey.voyer@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * welcometo.css
 *
 * welcometo stylesheet
 *
 */


@font-face {
  font-family: 'Caveat';
  src: url('img/font/Caveat-Regular.woff2') format('woff2'),
    url('img/font/Caveat-Regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@mixin handwritten {
  font-size: x-large;
  font-family: "Caveat";
}

@mixin centered {
  display:flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

@mixin highlight {
  &.selectable {
    cursor:pointer;
    background-color:rgba(255,0,0, 0.3);
    animation:borderBlink 0.9s infinite;
  }

  &.unselectable {
    cursor:not-allowed;
  }
}

@keyframes borderBlink {
  0%   { border: 2px dashed white; }
  49%  { border: 2px dashed white; }
  50%  { border: 2px dashed black; }
  99% { border: 2px dashed black; }
  100% { border: 2px dashed white; }
}

@keyframes borderBlink2 {
  0%   { border: 2px dashed red; }
  49%  { border: 2px dashed red; }
  50%  { border: 2px dashed black; }
  99% { border: 2px dashed black; }
  100% { border: 2px dashed red; }
}


@keyframes backgroundBlink {
  0%   { background-color:rgba(255,0,0, 0.3); }
  49%  { background-color:rgba(255,0,0, 0.3); }
  50%  { background-color:rgba(255,255,255, 0.3); }
  99% { background-color:rgba(255,255,255, 0.3);  }
  100% { background-color:rgba(255,0,0, 0.3); }
}


@import 'modules/css/nouislider.css';
@import 'modules/css/welcometo.variables';


/*****************************
******************************
*********** LAYOUT ***********
******************************
*****************************/

/*
 * Controls in the top bar
 */
#layout-controls-container {
  position:relative;

  &.undefined svg path {
    animation:blinkColor linear 0.9s infinite;
  }

  &.layoutControlsHidden {
    #layout-button path {
      fill:#777;
    }

    #layout-controls {
      display:none;
    }
  }


  svg#layout-button {
    width: 25px;
    height: 25px;
    cursor: pointer;
    position: relative;
    top: 17px;

    path {
      fill: black;
    }
  }

  #layout-controls {
    position: absolute;
    z-index: 1;
    top: 55px;
    right: -73px;
    background-color: #e7e9e8;
    padding: 8px;
    border-radius: 5px;
    box-shadow: 0px 0px 10px -2px #385088;
    text-align: left;

    .button-group {
      display:flex;
      justify-content: center;
      .bgabutton {
        border-radius:0px;
        &:first-of-type {
          border-top-left-radius: 6px;
          border-bottom-left-radius: 6px;
        }
        &:last-of-type {
          border-top-right-radius: 6px;
          border-bottom-right-radius: 6px;
        }
      }
    }

    &[data-mode="0"] {
      #layout-control-0 {
        background-color:#4871b6;
        color:white;
      }

      #layout-control-range {
        width:95%;
      }
    }

    &[data-mode="1"]{
      #layout-control-1 {
        background-color:#4871b6;
        color:white;
      }

    }
  }
}



/********************
* HORIZONTAL LAYOUT *
********************/
body {
  overflow-x:hidden;
  max-width:100vw;
}
#overall-content {
  overflow:initial !important;
  max-width:100vw;

  &[data-mode="1"] {
    overflow:hidden !important;
  }
}


#welcometo-container {
  display:flex;
  flex-flow: row;

  #construction-cards-container {
    position:relative;
    margin-right:10px;

    #construction-cards-container-sticky {
      position:sticky;
      top:60px;


      #construction-cards-container-resizable {
        transform-origin: top left;
        display:flex;
        flex-flow:column;

        .construction-cards-stack {
          margin-bottom:10px;
        }
      }
    }
  }

  #player-score-sheet-resizable {
    transform-origin: top left;
  }

  #plan-cards-container {
    margin-left:10px;
    position:relative;
    #plan-cards-container-sticky {
      position:sticky;
      top:60px;
      #plan-cards-container-resizable {
        transform-origin: top left;
        display:flex;
        flex-flow:column;

        .plan-card-holder {
          margin-bottom:10px;
        }
      }
    }
  }
}


/******************
* VERTICAL LAYOUT *
******************/
#welcometo-container[data-mode="1"] {
  display:grid;
  grid-template-columns: auto auto;

  #construction-cards-container {
    grid-row: 1;
    grid-column: 1 / span 1;
    margin:0;

    #construction-cards-container-sticky {
      position:initial;

      #construction-cards-container-resizable {
        transform-origin: top left;
        display:flex;
        flex-flow:row;

        .construction-cards-stack {
          margin-right:10px;
        }
      }
    }
  }

  #player-score-sheet {
    grid-row: 2;
    grid-column: 1 / span 2;
    transform-origin: top left;
  }

  #plan-cards-container {
    margin:0;
    position:relative;
    grid-row: 1;
    grid-column: 2  / span 1;
    #plan-cards-container-sticky {
      position:initial;

      #plan-cards-container-resizable {
        transform-origin: top left;
        display:flex;
        flex-flow:row;

        .plan-card-holder {
          margin-left:10px;
        }
      }
    }
  }
}


/*****************************
******************************
*********** CARDS ************
******************************
*****************************/
$cardWidth:200px;
$cardHeight:520px * $cardWidth / 343px;
$cardMargin:5px;

#construction-cards-container {
  background-color:rgba(255,255,255,0.6);
  padding:10px;

  #construction-cards-container-resizable {
    display:flex;
    flex-grow:1;
    justify-content: space-around;

    .construction-cards-stack {
      display:flex;
      flex-flow:row;
      border:4px solid transparent;
      border-radius:4px;
      width:$cardWidth;
      height:$cardHeight;

      &.unselectable {
        opacity:0.6;
        cursor:not-allowed;
      }

      &.selectable {
        cursor:pointer;
        &:hover {
          transform:scale(1.02);
          border-color:red;
        }
      }

      &.selected {
        border-color:red;
        &.unselectable {
          opacity:1;
          cursor:default;
        }
      }
    }

    /* Standard mode : changing display for nice flip animation */
    &.standard {
      .construction-cards-stack {
        position:relative;
        width:2*$cardWidth + $cardMargin;
      }
      .construction-card-holder {
        position:absolute;
        top:0;
        left:0;
        transform-origin: ($cardWidth + $cardMargin / 2) / $cardWidth * 100% 0%;
      }
    }

    .construction-card-holder {
      width:$cardWidth;
      height:$cardHeight;
      transition: transform .5s ease-in-out;
      transform-origin: 50% 50%;
      transform-style: preserve-3d;
      &.flipped {
        transform:rotateY(180deg);
      }

      .construction-card-back, .construction-card-front {
        position:absolute;
        top:0;
        left:0;
        width:100%;
        height:100%;
        backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
      }

      .construction-card-back {
        background-image:url("img/construction_back.jpg");
        background-size:cover;
        transform: rotateY(180deg);
        z-index:2;
        @include centered;

        .action {
          width:170px;
          height:170px;
          background-image:url("img/actions.png");
          background-size:cover;
        }
      }

      .construction-card-front {
        background-image:url("img/construction_front.jpg");
        background-size:cover;
        position:relative;

        .top-right-corner, .bottom-left-corner {
          position:absolute;
          width:47px;
          height:47px;
          background-image:url("img/actions.png");
          background-size:cover;
          clip-path: polygon(0 13%, 0 0, 100% 0, 100% 100%, 80% 100%);
        }

        .top-right-corner {
          top: 5px;
          left: 149px;
        }

        .bottom-left-corner {
          transform: rotate(180deg);
          bottom: 13px;
          left: 4px;
        }
      }

      @for $i from 1 through 6 {
        &[data-action="#{$i}"] .action { background-position: ($i - 1)*100%/5 center; }
        &[data-action="#{$i}"] .top-right-corner, &[data-action="#{$i}"] .bottom-left-corner
         { background-position: ($i - 1)*100%/5 center; }
      }

      @for $i from 0 through 17 {
        &[data-number="#{$i}"] .construction-card-front { background-position: $i*100%/17 center; }
      }
    }
  }
}



#plan-cards-container {
  background-color:rgba(255,255,255,0.6);
  padding:10px;

  #plan-cards-container-resizable {
    display:flex;
    flex-grow:1;
    justify-content: space-around;


    .plan-card-holder {
      width:$cardWidth;
      height:$cardHeight;
      border:4px solid transparent;
      border-radius:4px;

      &.unselectable {
        opacity:0.6;
        cursor:not-allowed;
      }

      &.selectable {
        cursor:pointer;
        &:hover {
          transform:scale(1.02);
          border-color:red;
        }
      }

      &.selected {
        border-color:red;
        &.unselectable {
          opacity:1;
          cursor:default;
        }
      }

      .plan-card-front {
        width:100%;
        height:100%;
        background-image:url("img/plans.jpg");
        background-size:cover;
      }

      @for $i from 0 through 27 {
        &[data-id="#{$i}"] .plan-card-front { background-position: $i*100%/27 center; }
      }
    }
  }
}


/***********************************
************************************
*********** SCORE SHEET ************
************************************
***********************************/
.score-sheet-container {
  width: 1544px;
  height:1544px;

  .score-sheet {
    width: 1544px;
    height:1544px;
    background-image: url("img/board.png");
    background-size: 100%;
    position: relative;

  /********************************
  *** Hightlight recent actions ***
  ********************************/
  @for $t from 1 through 30 {
    &[data-turn="#{$t}"] .house-number[data-turn="#{$t}"] {
      color:red;
    }

    &[data-turn="#{$t}"] [data-turn="#{$t}"] .scribble-path  { stroke:red; }
  }

  /*****************************
  ******************************
  ********* UPPER PART *********
  ******************************
  *****************************/
    /////////// CITY NAME ////////////
    .cityname {
      position:absolute;
      top: 253px;
      left: 92px;
      width: 207px;
      height: 70px;
      font-size:32px;
      word-break: break-all;
      @include handwritten;
      @include centered;
    }


    /////////// HOUSES ////////////
    .house {
      position:absolute;
      width:70px;
      height:86px;
      box-sizing: border-box;
      clip-path:polygon(0 0, 100% 0, 100% 70px, 45px 70px, 45px 86px, 11px 86px, 11px 70px, 0 70px);

      &.built {
        border:2px solid black;

        .house-number {
          margin:auto;
          @include handwritten;
          @include centered;
          font-size:55px;
          line-height:61px
        }
      }

      @each $x, $street in $houses {
        @each $y, $house in $street {
          &[data-x="#{$x}"][data-y="#{$y}"] {
            left: map-get($house, 'left');
            top: map-get($house, 'top');
          }
        }
      }

      &.unselectable:not(.built) {
        background-color:rgba(155, 155, 155, 0.8);
        cursor:not-allowed;
      }

      &.selectable {
        cursor:pointer;
        background:rgba(255,0,0,0.5);
        background-image: url("img/truelle.png");
        background-size: contain;
        animation: 2s ease-in-out 0.5s infinite alternate hammerHighlight;
        @keyframes hammerHighlight { from { opacity: 1; }  to { opacity: 0; } }

        /*
        &:hover {
          opacity:1;
          animation-name: none;
        }
        */
      }
    }


    /////////// FENCES ////////////
    .top-fence {
      position: absolute;
      width: 96px;
      height: 11px;
      box-sizing: border-box;
    }

    .estate-fence {
      position: absolute;
      height: 180px;
      width: 12px;
      box-sizing: border-box;
      border-radius:5px;
      @include highlight;
      &.selectable {
        animation:borderBlink2 0.9s infinite;
      }
    }

    @each $x, $street in $fences {
      $left:map-get($street, 'left');
      .estate-fence[data-x="#{$x}"][data-y="-1"] {
        left: $left - 6px;
        top: map-get($street, 'top') - 11px;
      }

      @for $y from 1 through length(map-get($street, 'widths')) {
        .top-fence[data-x="#{$x}"][data-y="#{$y - 1}"] {
          left: $left;
          top: map-get($street, 'top');
          width: nth(map-get($street, 'widths'), $y);
        }

        $left:$left + nth(map-get($street, 'widths'), $y);

        .estate-fence[data-x="#{$x}"][data-y="#{$y - 1}"] {
          left: $left - 6px;
          top: map-get($street, 'top') - 11px;
        }
      }
    }


    /////////// POOLS /////////////
    .pool {
      position: absolute;
      height: 45px;
      width: 45px;
      box-sizing: border-box;


      @for $i from 1 through length($pools) {
        $p:nth($pools, $i);
        &[data-x="#{map-get($p,'x')}"][data-y="#{map-get($p,'y')}"] {
          left: map-get($p,'left');
          top: map-get($p,'top');
        }
      }

      svg.ladder {
        display:none;

        path {
          animation:blinkColor linear 0.9s infinite;
          stroke:white;
          stroke-width:2px;
        }

        @keyframes blinkColor {
          0%   { fill: red; }
          49%   { fill: red; }
          50%   { fill: black; }
          100%   { fill: black; }
        }
      }

      &.selectable {
        cursor:pointer;
        svg.ladder {
          display:block;
        }
      }
    }



    /////////// PARKS ////////////
    .park {
      position: absolute;
      height: 50px;
      width: 50px;
      box-sizing: border-box;

      @each $x, $street in $parks {
        $left:map-get($street, 'left');
        @for $y from 1 through map-get($street, 'n') {
          &[data-x="#{$x}"][data-y="#{$y - 1}"] {
            left: $left + ($y - 1)*52px;
            top: map-get($street, 'top');
          }
        }
      }

      &.selectable {
        cursor:pointer;
        svg.highlight {
          display:block;
        }
      }

      svg {
        position:absolute;
        top:0;
        left:0;
        width:100%;
        height:100%;
      }

      svg.highlight {
        display:none;

        .park-black {
          fill:rgba(255,0,0,0.4);
          stroke:black;
          stroke-width:2px;
        }
        .park-white {
          fill:none;
          stroke:white;
          stroke-width:2px;
          stroke-dasharray:20;
          animation:snake linear 0.9s infinite;
        }

        @keyframes snake {
          0%   { stroke-dashoffset: 40; }
          100% { stroke-dashoffset: 0; }
        }
      }
    }


    /////////// ESTATES ////////////
    .estate {
      position: absolute;
      box-sizing: border-box;
      background-color: rgba(255,0,0,0.4);
      cursor:pointer;
      display:none;
      svg {
        width:100%;
        height:100%;
        display:none;
      }

      &.selected {
        display:block;
        background-color: rgba(0,255,0,0.4);
        border: 6px solid black;
        border-radius: 6px;

        &.selectable svg {
          display:none;
        }
      }

      &.selectable {
        display:block;

        svg {
          display:block;

          rect:first-of-type {
            fill:none;
            stroke:white;
            stroke-width:10;
          }

          rect:last-of-type {
            fill:none;
            stroke:black;
            stroke-width:10;
            stroke-dasharray:10;
            animation:snake linear 0.7s infinite;
          }
        }

        &:hover svg rect:last-of-type {
          animation:none;
          stroke-dasharray:0;
        }
      }
    }


  /*****************************
  ******************************
  ********* LOWER PART *********
  ******************************
  *****************************/
    /////////// POOLS ////////////
    .score-pool {
      position: absolute;
      height: 45px;
      width: 45px;
      box-sizing: border-box;
      border-radius: 10px;
      @include highlight;

      @for $x from 1 through 9 {
        &[data-x="#{$x - 1}"] {
          $i:ceil($x / 2);
          top: nth($scorePools, $i);
          left: if($x % 2 == 1, 337px, 385px);;
        }
      }
    }


    /////////// TEMP ////////////
    .score-temp {
      position: absolute;
      height: 42px;
      width: 42px;
      transform:rotate(45deg);
      box-sizing: border-box;

      @for $x from 1 through 11 {
        &[data-x="#{$x - 1}"] {
          top: map-get(nth($scoreTemps, $x), 'top');
          left: map-get(nth($scoreTemps, $x), 'left');
        }
      }
    }


    /////////// ESTATES ////////////
    .score-estate {
      position: absolute;
      width: 40px;
      height: 40px;
      box-sizing: border-box;
      border-radius: 10px;
      @include highlight;

      @for $x from 1 through 6 {
        @for $y from 1 through map-get(nth($scoreEstates, $x), 'n') {
          &[data-x="#{$x - 1}"][data-y="#{$y - 1}"] {
            top: map-get(nth($scoreEstates, $x), 'top') + ($y - 1)*44px;
            left: map-get(nth($scoreEstates, $x), 'left');
          }
        }
      }
    }

    /////////// BIS ////////////
    .score-bis {
      position: absolute;
      height: 45px;
      width: 45px;
      box-sizing: border-box;

      @for $x from 1 through 9 {
        &[data-x="#{$x - 1}"] {
          $i:ceil($x / 2);
          top: nth($scoreBis, $i);
          left: if($x % 2 == 1, 1153px, 1208px);;
        }
      }
    }


    /////////// PERMIT REFUSAL ////////////
    .permit-refusal {
      position: absolute;
      height: 53px;
      width: 50px;
      box-sizing: border-box;
      clip-path: polygon(50% 0, 100% 25%,100% 75%,50% 100%, 0% 75%,0% 25%);
      @include highlight;

      &.selectable {
        animation:backgroundBlink 0.9s infinite;
      }



      @for $x from 1 through 3 {
        &[data-x="#{$x - 1}"] {
          top: nth($permitRefusal, $x);
          left: 1312px;
        }
      }
    }

    /*****************************
    ******************************
    *********** SCORES  **********
    ******************************
    *****************************/
    .score-counter {
      position:absolute;
      width:68px;
      height:68px;
      @include centered;
      @include handwritten;
      font-size: 42px;
    }

    // PLANS //
    .score_plan-0 {  top:1034px;  left:82px; }
    .score_plan-1 {  top:1156px;  left:80px; }
    .score_plan-2 {  top:1278px;  left:80px; }
    .score_plan-total {  top:1388px;  left:82px; }


    // PARKS //
    .score_park-0 {  top:1121px;  left:206px; }
    .score_park-1 {  top:1199px;  left:206px; }
    .score_park-2 {  top:1272px;  left:206px; }
    .score_park-total {  top:1388px;  left:206px; }

    // POOLS //
    .score_pool-total {  top:1388px;  left:347px; }

    // TEMP //
    .score_temp-total {  top:1388px;  left:510px; }

    // ESTATES //
    .score_estate-mult-0 {  top:1296px;  left:680px; }
    .score_estate-mult-1 {  top:1296px;  left:748px; }
    .score_estate-mult-2 {  top:1296px;  left:821px; }
    .score_estate-mult-3 {  top:1296px;  left:891px; }
    .score_estate-mult-4 {  top:1296px;  left:967px; }
    .score_estate-mult-5 {  top:1296px;  left:1043px; }


    .score_estate-total-0 {  top:1388px;  left:664px; }
    .score_estate-total-1 {  top:1388px;  left:736px; }
    .score_estate-total-2 {  top:1388px;  left:802px; }
    .score_estate-total-3 {  top:1388px;  left:875px; }
    .score_estate-total-4 {  top:1388px;  left:953px; }
    .score_estate-total-5 {  top:1388px;  left:1028px; }


    // BIS //
    .score_bis-total {  top:1388px;  left:1171px; }


    // OTHER //
    .score_other-total {  top:1388px;  left:1306px; }

    // TOTAL //
    .score_total {  top:1388px;  left:1411px; }

/****************************
*****************************
********* SCRIBBLE  *********
*****************************
****************************/
    .scribble, .scribble-circle, .scribble-line, .scribble-line-hor {
      width:100%;
      height:100%;
      .scribble-path {
        stroke:black;
        stroke-linecap:round;
      }


      &.animate .scribble-path {
        animation: drawScribble 2s cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-fill-mode: forwards;
      }
      @keyframes drawScribble {
        to {
          stroke-dashoffset: 0;
        }
      }
    }


    .scribble {
      .scribble-path {
        stroke-dasharray: 4500;
        stroke-dashoffset: 0;
      }
      &.animate .scribble-path {
        stroke-dashoffset: 4500;
      }
    }


    .scribble-circle {
      .scribble-path {
        stroke-dasharray: 1500;
        stroke-dashoffset: 0;
      }
      &.animate .scribble-path {
        stroke-dashoffset: 1500;
      }
    }


    .scribble-line, .scribble-line-hor {
      .scribble-path {
        stroke-dasharray: 300;
        stroke-dashoffset: 0;
      }
      &.animate .scribble-path {
        stroke-dashoffset: 300;
      }
    }

    .scribble-line {
      padding-top:12px;
    }
  }
}


/*************************
**************************
********* MODAL  *********
**************************
*************************/
#popin_chooseNumber {
  border: none;
  border-radius: 0px;
  box-shadow: none;
  background:transparent;
  padding:0;

  &::before, &::after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-image: url("img/dialog-texture.jpg");
    box-shadow: -5px 5px 3px 0px rgba(20,20,20,0.6);
    z-index:-1;
  }

  &::before {
    transform: rotate(2deg);
    transform-origin: top left;
    z-index: -2;
    left: -3px;
    top: 6px;
  }

  &::after {
    background-image: url("img/staple.png"), url("img/dialog-texture.jpg");
    background-position: 5px 5px, top left;
    background-repeat: no-repeat, repeat;
    background-size:58px, 60px;
  }

  h2 {
    @include handwritten;
    color:#b74d44;
    font-size:30px;
    padding:3px 90px;
    text-align: center;
    &::before, &::after {
      content:"★";
      margin:5px;
    }
  }

  #popin_chooseNumber_close {
    background-color: #b74d44;
    border-radius: 50%;
    width: 45px;
    height: 45px;
    @include centered;
    top: -15px;
    right: -15px;
    font-size: 100%;
    color: white !important;

    &:hover {
      text-decoration: none;
      color:#CCC !important;
      transform:scale(1.1);
    }

    i {
      margin-top:-2px;
    }
  }

  #popin_chooseNumber_contents {
    min-height:200px;
    display:flex;
    justify-content: space-around;
    margin: 30px 20px;

    div {
      height:200px;
      margin:0 10px;
      width:$cardWidth * 200px / $cardHeight;
      background-image:url("img/construction_front.jpg");
      background-size:cover;
      box-shadow:-2px 2px 3px rgba(20,20,20,0.8);
      cursor:pointer;

      @for $i from 0 through 17 {
        &[data-number="#{$i}"] { background-position: $i*100%/17 center; }
      }

      &:hover {
        transform:scale(1.05) rotate(2deg);
      }
    }
  }
}
