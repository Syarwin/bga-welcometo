
.score-sheet-container {
  width: 1544px;
  height:1544px;

  .score-sheet {
    width: 1544px;
    height:1544px;
    background-image: url("img/board.png");
    background-size: 100%;
    position: relative;

  /*****************************
  ******************************
  ********* UPPER PART *********
  ******************************
  *****************************/
    /////////// CITY NAME ////////////
    .cityname {
      position:absolute;
      top: 253px;
      left: 92px;
      width: 207px;
      height: 70px;
      font-size:32px;
      word-break: break-all;
      @include handwritten;
      @include centered;
    }


    /////////// HOUSES ////////////
    .house {
      position:absolute;
      width:70px;
      height:86px;
      box-sizing: border-box;
      clip-path:polygon(0 0, 100% 0, 100% 70px, 45px 70px, 45px 86px, 11px 86px, 11px 70px, 0 70px);

      &.built {
        border:2px solid black;

        .house-number {
          margin:auto;
          @include handwritten;
          @include centered;
          font-size:55px;
          line-height:61px;

          span {
            font-size: 40px;
            font-family: Times;
            font-style: italic;
            margin-left: 2px;
          }
        }
      }

      @each $x, $street in $houses {
        @each $y, $house in $street {
          &[data-x="#{$x}"][data-y="#{$y}"] {
            left: map-get($house, 'left');
            top: map-get($house, 'top');
          }
        }
      }

      &.unselectable:not(.built) {
        background-color:rgba(155, 155, 155, 0.8);
        cursor:not-allowed;
      }

      &.selectable {
        cursor:pointer;
        background:rgba(255,0,0,0.5);
        background-image: url("img/truelle.png");
        background-size: contain;
        animation: 2s ease-in-out 0.5s infinite alternate hammerHighlight;
        @keyframes hammerHighlight { from { opacity: 1; }  to { opacity: 0; } }

        /*
        &:hover {
          opacity:1;
          animation-name: none;
        }
        */
      }
    }


    /////////// FENCES ////////////
    .top-fence {
      position: absolute;
      width: 96px;
      height: 11px;
      box-sizing: border-box;
    }

    .estate-fence {
      position: absolute;
      height: 180px;
      width: 12px;
      box-sizing: border-box;
      border-radius:5px;
      @include highlight;
      &.selectable {
        animation:borderBlink2 0.9s infinite;
      }
    }

    @each $x, $street in $fences {
      $left:map-get($street, 'left');
      .estate-fence[data-x="#{$x}"][data-y="-1"] {
        left: $left - 6px;
        top: map-get($street, 'top') - 11px;
      }

      @for $y from 1 through length(map-get($street, 'widths')) {
        .top-fence[data-x="#{$x}"][data-y="#{$y - 1}"] {
          left: $left;
          top: map-get($street, 'top');
          width: nth(map-get($street, 'widths'), $y);
        }

        $left:$left + nth(map-get($street, 'widths'), $y);

        .estate-fence[data-x="#{$x}"][data-y="#{$y - 1}"] {
          left: $left - 6px;
          top: map-get($street, 'top') - 11px;
        }
      }
    }


    /////////// POOLS /////////////
    .pool {
      position: absolute;
      height: 45px;
      width: 45px;
      box-sizing: border-box;


      @for $i from 1 through length($pools) {
        $p:nth($pools, $i);
        &[data-x="#{map-get($p,'x')}"][data-y="#{map-get($p,'y')}"] {
          left: map-get($p,'left');
          top: map-get($p,'top');
        }
      }

      svg.ladder {
        display:none;

        path {
          animation:blinkColor linear 0.9s infinite;
          stroke:white;
          stroke-width:2px;
        }

        @keyframes blinkColor {
          0%   { fill: red; }
          49%   { fill: red; }
          50%   { fill: black; }
          100%   { fill: black; }
        }
      }

      &.selectable {
        cursor:pointer;
        svg.ladder {
          display:block;
        }
      }
    }



    /////////// PARKS ////////////
    .park {
      position: absolute;
      height: 50px;
      width: 50px;
      box-sizing: border-box;

      @each $x, $street in $parks {
        $left:map-get($street, 'left');
        @for $y from 1 through map-get($street, 'n') {
          &[data-x="#{$x}"][data-y="#{$y - 1}"] {
            left: $left + ($y - 1)*52px;
            top: map-get($street, 'top');
          }
        }
      }

      &.selectable {
        cursor:pointer;
        svg.highlight {
          display:block;
        }
      }

      svg {
        position:absolute;
        top:0;
        left:0;
        width:100%;
        height:100%;
      }

      svg.highlight {
        display:none;

        .park-black {
          fill:rgba(255,0,0,0.4);
          stroke:black;
          stroke-width:2px;
        }
        .park-white {
          fill:none;
          stroke:white;
          stroke-width:2px;
          stroke-dasharray:20;
          animation:snake linear 0.9s infinite;
        }

        @keyframes snake {
          0%   { stroke-dashoffset: 40; }
          100% { stroke-dashoffset: 0; }
        }
      }
    }


    /////////// ESTATES ////////////
    .estate {
      position: absolute;
      box-sizing: border-box;
      background-color: rgba(255,0,0,0.4);
      cursor:pointer;
      display:none;
      svg {
        width:100%;
        height:100%;
        display:none;
      }

      &.selected {
        display:block;
        background-color: rgba(0,255,0,0.4);
        border: 6px solid black;
        border-radius: 6px;

        &.selectable svg {
          display:none;
        }
      }

      &.selectable {
        display:block;

        svg {
          display:block;

          rect:first-of-type {
            fill:none;
            stroke:white;
            stroke-width:10;
          }

          rect:last-of-type {
            fill:none;
            stroke:black;
            stroke-width:10;
            stroke-dasharray:10;
            animation:snake linear 0.7s infinite;
          }
        }

        &:hover svg rect:last-of-type {
          animation:none;
          stroke-dasharray:0;
        }
      }
    }


  /*****************************
  ******************************
  ********* LOWER PART *********
  ******************************
  *****************************/
    /////////// POOLS ////////////
    .score-pool {
      position: absolute;
      height: 45px;
      width: 45px;
      box-sizing: border-box;
      border-radius: 10px;
      @include highlight;

      @for $x from 1 through 9 {
        &[data-x="#{$x - 1}"] {
          $i:ceil($x / 2);
          top: nth($scorePools, $i);
          left: if($x % 2 == 1, 337px, 385px);;
        }
      }
    }


    /////////// TEMP ////////////
    .score-temp {
      position: absolute;
      height: 42px;
      width: 42px;
      transform:rotate(45deg);
      box-sizing: border-box;

      @for $x from 1 through 11 {
        &[data-x="#{$x - 1}"] {
          top: map-get(nth($scoreTemps, $x), 'top');
          left: map-get(nth($scoreTemps, $x), 'left');
        }
      }
    }


    /////////// ESTATES ////////////
    .score-estate {
      position: absolute;
      width: 40px;
      height: 40px;
      box-sizing: border-box;
      border-radius: 10px;
      @include highlight;

      @for $x from 1 through 6 {
        @for $y from 1 through map-get(nth($scoreEstates, $x), 'n') {
          &[data-x="#{$x - 1}"][data-y="#{$y - 1}"] {
            top: map-get(nth($scoreEstates, $x), 'top') + ($y - 1)*44px;
            left: map-get(nth($scoreEstates, $x), 'left');
          }
        }
      }
    }

    /////////// BIS ////////////
    .score-bis {
      position: absolute;
      height: 45px;
      width: 45px;
      box-sizing: border-box;

      @for $x from 1 through 9 {
        &[data-x="#{$x - 1}"] {
          $i:ceil($x / 2);
          top: nth($scoreBis, $i);
          left: if($x % 2 == 1, 1153px, 1208px);;
        }
      }
    }


    /////////// PERMIT REFUSAL ////////////
    .permit-refusal {
      position: absolute;
      height: 53px;
      width: 50px;
      box-sizing: border-box;
      clip-path: polygon(50% 0, 100% 25%,100% 75%,50% 100%, 0% 75%,0% 25%);
      @include highlight;

      &.selectable {
        animation:backgroundBlink 0.9s infinite;
      }



      @for $x from 1 through 3 {
        &[data-x="#{$x - 1}"] {
          top: nth($permitRefusal, $x);
          left: 1312px;
        }
      }
    }


    /////////// ROUNDABOUT ////////////
    .score-roundabout {
      position: absolute;
      height: 53px;
      width: 50px;
      box-sizing: border-box;

      @for $x from 1 through 2 {
        &[data-x="#{$x - 1}"] {
          top: nth($scoreRoundabout, $x);
          left: 1311px;
        }
      }
    }

    /*****************************
    ******************************
    *********** SCORES  **********
    ******************************
    *****************************/
    .score-counter {
      position:absolute;
      width:68px;
      height:68px;
      @include centered;
      @include handwritten;
      font-size: 42px;
    }

    // PLANS //
    .score_plan-0 {  top:1034px;  left:82px; }
    .score_plan-1 {  top:1156px;  left:80px; }
    .score_plan-2 {  top:1278px;  left:80px; }
    .score_plan-total {  top:1388px;  left:82px; }


    // PARKS //
    .score_park-0 {  top:1121px;  left:206px; }
    .score_park-1 {  top:1199px;  left:206px; }
    .score_park-2 {  top:1272px;  left:206px; }
    .score_park-total {  top:1388px;  left:206px; }

    // POOLS //
    .score_pool-total {  top:1388px;  left:347px; }

    // TEMP //
    .score_temp-total {  top:1388px;  left:510px; }

    // ESTATES //
    .score_estate-mult-0 {  top:1296px;  left:680px; }
    .score_estate-mult-1 {  top:1296px;  left:748px; }
    .score_estate-mult-2 {  top:1296px;  left:821px; }
    .score_estate-mult-3 {  top:1296px;  left:891px; }
    .score_estate-mult-4 {  top:1296px;  left:967px; }
    .score_estate-mult-5 {  top:1296px;  left:1043px; }


    .score_estate-total-0 {  top:1388px;  left:664px; }
    .score_estate-total-1 {  top:1388px;  left:736px; }
    .score_estate-total-2 {  top:1388px;  left:802px; }
    .score_estate-total-3 {  top:1388px;  left:875px; }
    .score_estate-total-4 {  top:1388px;  left:953px; }
    .score_estate-total-5 {  top:1388px;  left:1028px; }


    // BIS //
    .score_bis-total {  top:1388px;  left:1171px; }


    // OTHER //
    .score_other-total {  top:1388px;  left:1306px; }

    // TOTAL //
    .score_total {  top:1388px;  left:1411px; }
  }
}
